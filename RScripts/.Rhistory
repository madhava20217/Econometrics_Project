& data$year==dis_year[i,2] & data$cropcategory==cropcat[j] &
data$season ==dis_year[i,3]])
length(data$index[data$districtlgdcode==dis_year[i,1]
& data$year==dis_year[i,2] & data$cropcategory==cropcat[j] &
data$season ==dis_year[i,3]])
dis_year <- subset(data,select=c('districtlgdcode','year','season','cropcategory'))
dis_year$cash <- NA
dis_year$cereal <- NA
dis_year$horti <- NA
dis_year$pulse <- NA
dis_year$oilseed <- NA
dis_year$coarse <- NA
cropcat <- unique(data$cropcategory)
for(i in 1:nrow(dis_year)){
for(j in 1:NROW(cropcat)){
toadd <-data$index[data$districtlgdcode==dis_year[i,1] & data$year==dis_year[i,2] &
data$cropcategory==cropcat[j] & data$season ==dis_year[i,3]]
if(length(toadd)>0){
dis_year[i,j+4] <- toadd
}
}
}
dis_year <- subset(data,select=c('districtlgdcode','year','season','cropcategory'))
dis_year$cash <- NA
dis_year$cereal <- NA
dis_year$horti <- NA
dis_year$pulse <- NA
dis_year$oilseed <- NA
dis_year$coarse <- NA
View(dis_year)
twoptr <- subset(data,select=c('districtlgdcode','year','season','cropcategory','index'))
View(twoptr)
model_e <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash_gr + dis_year$Cereal_gr +
dis_year$Horticulture_gr + dis_year$Pulse_gr + dis_year$Oilseed_gr + dis_year$`Coarse Cereal_gr`)
library(data.table)
dis_year <- subset(data,select=c('districtlgdcode','year','season','cropcategory','index'))
cropcat <- unique(dis_year$cropcategory)
for(i in 1:NROW(cropcat)){
setDT(dis_year)[,c(cropcat[i]):=.(index[which(cropcategory == cropcat[i])]),
by=.(districtlgdcode,year,season)]
}
setDT(dis_year)[,c("yield_gr"):=.(index/shift(index) - 1), by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[1],"gr",sep="_")):=.(Cash/shift(Cash) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[2],"gr",sep="_")):=.(Cereal/shift(Cereal) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[3],"gr",sep="_")):=.(Horticulture/shift(Horticulture) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[4],"gr",sep="_")):=.(Pulse/shift(Pulse) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[5],"gr",sep="_")):=.(Oilseed/shift(Oilseed) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[6],"gr",sep="_")):=.(`Coarse Cereal`/shift(`Coarse Cereal`) - 1),by=.(districtlgdcode,season,cropcategory)]
#Converting Inf values to NA
dis_year$yield_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$yield_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Cash_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Cereal_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Horticulture_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Pulse_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Oilseed_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$`Coarse Cereal_gr`[is.infinite(dis_year$yield_gr)] <- NA
View(dis_year)
model_e <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash_gr + dis_year$Cereal_gr +
dis_year$Horticulture_gr + dis_year$Pulse_gr + dis_year$Oilseed_gr + dis_year$`Coarse Cereal_gr`)
dis_year$yield_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Cash_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Cereal_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Horticulture_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Pulse_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Oilseed_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$`Coarse Cereal_gr`[is.infinite(dis_year$yield_gr)] <- NA
model_e <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash_gr + dis_year$Cereal_gr +
dis_year$Horticulture_gr + dis_year$Pulse_gr + dis_year$Oilseed_gr + dis_year$`Coarse Cereal_gr`)
dis_year <- subset(data,select=c('districtlgdcode','year','season','cropcategory','index'))
cropcat <- unique(dis_year$cropcategory)
for(i in 1:NROW(cropcat)){
setDT(dis_year)[,c(cropcat[i]):=.(index[which(cropcategory == cropcat[i])]),
by=.(districtlgdcode,year,season)]
}
setDT(dis_year)[,c("yield_gr"):=.(index/shift(index) - 1), by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[1],"gr",sep="_")):=.(Cash/shift(Cash) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[2],"gr",sep="_")):=.(Cereal/shift(Cereal) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[3],"gr",sep="_")):=.(Horticulture/shift(Horticulture) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[4],"gr",sep="_")):=.(Pulse/shift(Pulse) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[5],"gr",sep="_")):=.(Oilseed/shift(Oilseed) - 1),by=.(districtlgdcode,season,cropcategory)]
setDT(dis_year)[,c(paste(cropcat[6],"gr",sep="_")):=.(`Coarse Cereal`/shift(`Coarse Cereal`) - 1),by=.(districtlgdcode,season,cropcategory)]
dis_year$yield_gr[is.infinite(dis_year$yield_gr)] <- NA
dis_year$Cash_gr[is.infinite(dis_year$Cash_gr)] <- NA
dis_year$Cereal_gr[is.infinite(dis_year$Cereal_gr)] <- NA
dis_year$Horticulture_gr[is.infinite(dis_year$Horticulture_gr)] <- NA
dis_year$Pulse_gr[is.infinite(dis_year$Pulse_gr)] <- NA
dis_year$Oilseed_gr[is.infinite(dis_year$Oilseed_gr)] <- NA
dis_year$`Coarse Cereal_gr`[is.infinite(dis_year$`Coarse Cereal_gr`)] <- NA
odel_e <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash_gr + dis_year$Cereal_gr +
dis_year$Horticulture_gr + dis_year$Pulse_gr + dis_year$Oilseed_gr + dis_year$`Coarse Cereal_gr`)
model_e$coefficients
model_e <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash_gr + dis_year$Cereal_gr +
dis_year$Horticulture_gr + dis_year$Pulse_gr + dis_year$Oilseed_gr + dis_year$`Coarse Cereal_gr`)
model_e$coefficients
rm(odel_e)
save.image("~/Desktop/ECONO ASS/code.RData")
log(dis_year$yield_gr)
view(log(dis_year$yield_gr))
log(dis_year$index)
model_f <- lm(data$v42 ~ log(data$gdp) + log(data$beds) +
log(data$tap) + log(dis_year$yield_gr))
#Part F
log_gdp <- log(data$gdp)
mean(log_gdp)
mean(log_gdp,na.rm = TRUE)
#Part F
log_gdp <- log(dis_year$yield_gr)
mean(log_gdp,na.rm = TRUE)
model_f <- lm(data$v42 ~ log(data$gdp) + log(data$beds) +
log(data$tap) + log(dis_year$index))
#Part F
log(0)
#Part F
log_gdp <- log(dis_year$index)
mean(log_gdp,na.rm = TRUE)
min(log_gdp,na.rm = TRUE)
log_index[is.infinite(log_index)] <- NA
#Part F
log_index <- log(dis_year$index)
log_index[is.infinite(log_index)] <- NA
model_f <- lm(data$v42 ~ log(data$gdp) + log(data$beds) +
log(data$tap) + log_index)
mean(log_index)
mean(log_index,na.rm=TRUE)
log_gdp <- log(data$gdp)
log_beds <- log(data$beds)
log_tap <- log(data$tap)
mean(log_tap,na.rm = TRUE)
log_tap[is.infinite(log_tap)] <- NA
log_tap
mean(log_tap,na.rm = TRUE)
mean(log_beds,na.rm = TRUE)
mean(log_gdp,na.rm = TRUE)
model_f <- lm(data$v42 ~ log_gdp + log_beds + log_tap + log_index)
model_f$coefficients
log_cash <- log(dis_year$Cash)
log_cereal <- log(dis_year$Cereal)
log_horti <- log(dis_year$Horticulture)
log_pulse <- log(dis_year$Pulse)
log_oilseed <- log(dis_year$Oilseed)
log_coarse <- log(dis_year$`Coarse Cereal`)
model_g <- lm(data$v42 ~ log_gdp + log_beds + log_tap + log_cash + log_cereal +
log_horti + log_pulse + log_oilseed + log_coarse)
mean(log_cash,na.rm = TRUE)
mean(log_cash,na.rm = TRUE)
log_cash[is.infinite(log_cash)] <- NA
mean(log_cash,na.rm = TRUE)
mean(log_cereal,na.rm = TRUE)
mean(log_cereal,na.rm = TRUE)
log_cereal[is.infinite(log_cereal)] <- NA
mean(log_cereal,na.rm = TRUE)
mean(log_horti,na.rm = TRUE)
log_horti[is.infinite(log_horti)] <- NA
mean(log_horti,na.rm = TRUE)
mean(log_pulse,na.rm = TRUE)
log_pulse[is.infinite(log_pulse)] <- NA
mean(log_oilseed,na.rm = TRUE)
log_pulse[is.infinite(log_pulse)] <- NA
mean(log_oilseed,na.rm = TRUE)
log_oilseed[is.infinite(log_oilseed)] <- NA
mean(log_oilseed,na.rm = TRUE)
log_coarse[is.infinite(log_coarse)] <- NA
mean(log_oilseed,na.rm = TRUE)
model_g <- lm(data$v42 ~ log_gdp + log_beds + log_tap + log_cash + log_cereal +
log_horti + log_pulse + log_oilseed + log_coarse)
model_g$coefficients
model_g <- lm(data$v42 ~ log_gdp + log_beds + log_tap + log_cash + log_cereal +
log_horti + log_oilseed + log_coarse)
model_g$coefficients
model_c <- lm(data$v42 ~ data$gdp + data$beds + data$tap + dis_year$Cash + dis_year$Cereal
+ dis_year$Horticulture + dis_year$Oilseed + dis_year$`Coarse Cereal`)
model_c$coefficients
View(dis_year)
View(dis_year)
model_tc <- lm(data$v39 ~ data$gdp + data$beds + data$tap + dis_year$Cash + dis_year$Cereal
+ dis_year$Horticulture + dis_year$Oilseed + dis_year$`Coarse Cereal`)
model_tc$coefficients
cropcat <- unique(q2$cropcategory)
for(cat in cropcat){
temp <- subset(q2,cropcategory == cat)
for(i in 7:ncol(q2)){
print(paste(paste("Index and",names(q2)[i],sep = " "),cat,sep=" "))
print(cor(temp$index,temp[,i],use='complete.obs'))
}
}
model <- lm(exp_data$lbw ~ log_gdp + log_beds + log_tap + log_cash + log_cereal +
log_horti + log_oilseed + log_coarse)
printflm(model)
library(ggplot2)
library(data.table)
#Read Data
data <- read.csv('main.csv')
#Extract Relevant Data
exp_data <- subset(data, select=c('districtlgdcode','year','season'
,'cropcategory','gdp','beds','tap'))
dv_data <- subset(data, select=c('v40','v42','v43','v44','v45','v46'))
dv_data <- setNames(dv_data,c('sepsis','lbw','pneumonia','diarrhoea','fever','measles'))
exp_data <- cbind(exp_data,dv_data)
exp_data$index <- data$index
rm(dv_data)
#Names of cropcategory
cropcat <- unique(exp_data$cropcategory)
#Custom mode function
mymode <- function(col) {
#removing NA values
col <- col[!is.na(col)]
#selecting unique values
uniq <- unique(col)
#finding mode
uniq[which.max(tabulate(match(col, uniq)))]
}
printflm <- function(mdl){
print(summary(mdl)$coefficients)
print(paste("     N:",nobs(mdl),"     ||      R squared:",summary(mdl)$r.squared))
}
#Ques 2
#Getting indices for DVs
dv_st <- which(colnames(exp_data) == 'sepsis')
dv_end <- which(colnames(exp_data) == 'measles')
sapply(exp_data[dv_st:dv_end],mean,na.rm=TRUE)
sapply(exp_data[dv_st:dv_end],median,na.rm=TRUE)
sapply(exp_data[dv_st:dv_end],mymode)
sapply(exp_data[dv_st:dv_end],sd,na.rm=TRUE)
#Part B and C
#Year-wise
for(i in dv_st:dv_end){
#Printing with outliers
print(ggplot(exp_data,aes(x=exp_data[,i],fill = factor(year)))+
geom_histogram(binwidth = 5,na.rm = TRUE)+labs(x=names(exp_data)[i],fill='Year'))
#Sys.sleep(2.5)
}
#Season-wise
for(i in dv_st:dv_end){
#Printing with outliers
print(ggplot(exp_data,aes(x=exp_data[,i],fill = season))+
geom_histogram(binwidth = 5,na.rm = TRUE)+labs(x=names(exp_data)[i],fill='Season'))
#Sys.sleep(2.5)
}
setDT(exp_data)
#Storing yield_index for cropcategories ceteris paribus
for(i in 1:NROW(cropcat)){
exp_data[,c(cropcat[i]):=.(index[which(cropcategory == cropcat[i])]),
by=.(districtlgdcode,year,season)]
}
#Storing yield_index_gr for cropcategories ceteris paribus
exp_data[,c("yield_gr"):=.(index/shift(index) - 1), by=.(districtlgdcode,season,cropcategory)]
for(i in 1:NROW(cropcat)){
exp_data[,c(paste(cropcat[i],"gr",sep="_")):=.(yield_gr[which(cropcategory == cropcat[i])]),
by=.(districtlgdcode,season,year)]
}
#Converting inf growth rate values to NA
exp_data$yield_gr[is.infinite(exp_data$yield_gr)] <- NA
exp_data$Cash_gr[is.infinite(exp_data$Cash_gr)] <- NA
exp_data$Cereal_gr[is.infinite(exp_data$Cereal_gr)] <- NA
exp_data$Horticulture_gr[is.infinite(exp_data$Horticulture_gr)] <- NA
exp_data$Pulse_gr[is.infinite(exp_data$Pulse_gr)] <- NA
exp_data$Oilseed_gr[is.infinite(exp_data$Oilseed_gr)] <- NA
exp_data$`Coarse Cereal_gr`[is.infinite(exp_data$`Coarse Cereal_gr`)] <- NA
#Part D
#1. dv and explanatory var
for(dv in dv_st:dv_end){
for(ev in 5:7){
print(paste(names(exp_data)[ev],names(exp_data)[dv],sep=" and "))
print(as.numeric(cor(exp_data[,ev,with=F],exp_data[,dv,with=F],use='complete.obs')))
}
}
#2. yield_index and cropcategory
for(crop in cropcat){
temp <- subset(exp_data,cropcategory == crop)
for(i in dv_st:dv_end){
print(paste("Index and",names(exp_data)[i],crop,sep=" "))
print(as.numeric(cor(temp$index,temp[,i,with=F],use='complete.obs')))
}
}
#3. yield_index_gr and cropcategory
for(crop in cropcat){
temp <- subset(exp_data,cropcategory == crop)
for(i in dv_st:dv_end){
print(paste("Yield_gr and",names(exp_data)[i],crop,sep=" "))
print(as.numeric(cor(temp$yield_gr,temp[,i,with=F],use='complete.obs')))
}
}
# Ques 3
#Part A
model <- lm(exp_data$lbw ~ exp_data$gdp + exp_data$beds + exp_data$tap)
printflm(model)
#Part B
lmb <- function(crop){
temp <- subset(exp_data, cropcategory == crop)
model <- lm(temp$lbw ~ temp$gdp + temp$beds + temp$tap + temp$index)
return(model)
}
for(crop in cropcat){
model <- lmb(crop)
printflm(model)
Sys.sleep(2.5)
}
#Part C
model <- lm(exp_data$lbw ~ exp_data$gdp + exp_data$beds + exp_data$tap + exp_data$Cash +
exp_data$Cereal + exp_data$Horticulture + exp_data$Pulse + exp_data$Oilseed +
exp_data$`Coarse Cereal`)
printflm(model)
#Part D
lmd <- function(crop){
temp <- subset(exp_data, cropcategory == crop)
model <- lm(temp$lbw ~ temp$gdp + temp$beds + temp$tap + temp$yield_gr)
return(model)
}
for(crop in cropcat){
model <- lmd(crop)
printflm(model)
Sys.sleep(2.5)
}
#Part E
model <- lm(exp_data$lbw ~ exp_data$gdp + exp_data$beds + exp_data$tap + exp_data$Cash_gr +
exp_data$Cereal_gr + exp_data$Horticulture_gr + exp_data$Pulse_gr +
exp_data$Oilseed_gr + exp_data$`Coarse Cereal_gr`)
printflm(model)
#Part F
lmf <- function(crop){
temp <- subset(exp_data, cropcategory == crop)
log_index <- log(temp$index)
log_index[is.infinite(log_index)] <- NA
log_gdp <- log(temp$gdp)
log_beds <- log(temp$beds)
log_tap <- log(temp$tap)
log_tap[is.infinite(log_tap)] <- NA
model <- lm(temp$lbw ~ log_gdp + log_beds + log_tap + log_index)
return(model)
}
for(crop in cropcat){
model <- lmf(crop)
printflm(model)
Sys.sleep(2.5)
}
#Part G
log_gdp <- log(exp_data$gdp)
log_beds <- log(exp_data$beds)
log_tap <- log(exp_data$tap)
log_tap[is.infinite(log_tap)] <- NA
log_cash <- log(exp_data$Cash)
log_cash[is.infinite(log_cash)] <- NA
log_cereal <- log(exp_data$Cereal)
log_cereal[is.infinite(log_cereal)] <- NA
log_horti <- log(exp_data$Horticulture)
log_horti[is.infinite(log_horti)] <- NA
log_oilseed <- log(exp_data$Oilseed)
log_oilseed[is.infinite(log_oilseed)] <- NA
log_coarse <- log(exp_data$`Coarse Cereal`)
log_coarse[is.infinite(log_coarse)] <- NA
model <- lm(exp_data$lbw ~ log_gdp + log_beds + log_tap + log_cash + log_cereal +
log_horti + log_oilseed + log_coarse)
printflm(model)
mean(log_cereal,na.rm=TRUE)
mean(log_horti,na.rm=TRUE)
mean(log_coarse,na.rm=TRUE)
mean(log_beds,na.rm=TRUE)
mean(log_gdp,na.rm=TRUE)
mean(log_cash,na.rm=TRUE)
mean(log_oilseed,na.rm=TRUE)
mean(exp_data$lbw,na.rm=TRUE)
View(exp_data)
#Part G
log_gdp <- log(exp_data$gdp)
log_beds <- log(exp_data$beds)
log_tap <- log(exp_data$tap)
log_tap[is.infinite(log_tap)] <- NA
log_cash <- log(exp_data$Cash)
log_cash[is.infinite(log_cash)] <- NA
log_pulse <- log(exp_data$Pulse)
log_pulse[is.infinite(log_pulse)] <- NA
log_cereal <- log(exp_data$Cereal)
log_cereal[is.infinite(log_cereal)] <- NA
log_horti <- log(exp_data$Horticulture)
log_horti[is.infinite(log_horti)] <- NA
log_oilseed <- log(exp_data$Oilseed)
log_oilseed[is.infinite(log_oilseed)] <- NA
log_coarse <- log(exp_data$`Coarse Cereal`)
log_coarse[is.infinite(log_coarse)] <- NA
mean(exp_data$lbw,na.rm=TRUE)
model <- lm(exp_data$lbw ~ log_gdp + log_beds + log_tap + log_cash + log_cereal + log_pulse
log_horti + log_oilseed + log_coarse)
model <- lm(exp_data$lbw ~ log_gdp + log_beds + log_tap + log_cash + log_cereal + log_pulse
+ log_horti + log_oilseed + log_coarse)
printflm(model)
setwd("/run/media/lot1aus/hdd_1/econo_2/Econometrics_Project/RScripts")
# install.packages("kableExtra");
# install.packages("gt");
# install.packages("tidyverse")
# install.packages("cowplot")
# install.packages("xtable")
# install.packages("corrplot")
# install.packages("lessR")
# install.packages("data.table")
# install.packages("olsrr")
# clear console and variables
rm(list = ls());
cat("\014");
cat("\014");
library(dplyr);
library(readr);
library(modeest);
library(statip);
library(ggplot2);
library(tidyr);
library(modelsummary);
library(kableExtra);
library(tidyverse);
library(cowplot);
library(xtable);
library(corrplot);
library(lessR);
library(data.table);
library(olsrr);
#this is for modelsummary
webshot::install_phantomjs()
#reading the dataframe values into "main_df"
main_df <- read_csv("../Data/main_final.csv");
#renaming variable of interest: v36 to Measles in the main_df
names(main_df)[names(main_df) == "v36"] <- "Measles"
#getting numeric data only, from main_df
num_df <- main_df[, unlist(lapply(main_df, is.numeric))]
# ********************SUMMARY OF VARIABLES********************
summary(num_df)
#determining which all features to be used among the numerical information
cov_mat_num <- cov(num_df, use = "complete.obs")
print(xtable(as.data.frame(cov_mat_num)), type = "html")
# Polio is transmitted through contaminated water and food, and necessitates
# hygiene, similar to Measles.
# Therefore, Measles could be related to Polio deaths.
# Same with diarrhoea and malaria
covs <- as.data.frame(cov(num_df, use = "complete.obs"))
print(covs$Measles)
corrs <- as.data.frame(cor(num_df, use = "complete.obs"))
write_csv(corrs, "correlation_matrix.csv")
abs_corrs <- abs(corrs)
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("Measles" , "v5", "v20", "v23", "v26", "v30", "v37", "v38",
"index", "gdp", "beds", "tap", "season")
test_df <- main_df[valid_cols]
rabi_df <- na.omit(test_df[test_df$season == "Rabi", ])
kharif_df <- na.omit(test_df[test_df$season == "Kharif", ])
correlation_plot <- corrplot(cor(test_df[, 1: 27], use = "complete.obs"),
method = "shade")
correlation_plot <- corrplot(cor(test_df[, 1: 27], use = "complete.obs"),
method = "shade")
corrplot(cor(num_df, use = "complete.obs"), method = "ellipse")
measles_form <- Measles ~ v5 + v20 + v23 + v26 + v30 + v37 + v38 +
index + gdp + beds + tap
measles_model_rabi <- lm(measles_form, rabi_df, na.action = na.omit)
measles_model_kharif <- lm(measles_form, kharif_df, na.action = na.omit)
summary(measles_model_rabi)
summary(measles_model_kharif)
#ols regression
ols_regress(measles_form, test_df)
measles_model <- lm(measles_form, test_df, na.action = na.omit)
ols_regress(measles_form, test_df)
View(rabi_df)
View(kharif_df)
View(kharif_df)
measles_form <- Measles ~ v5 + v20 + v23 + v26 + v30 + v37 + v38 +
index + gdp + beds + tap + Dsouth
rabi_df <- na.omit(dummy_df[dummy_df$season == "Rabi", ])
# get all the columns used by regression along with other columns
# req_cols <- c(unlist(colnames(num_df)),"state")
req_cols <- c(valid_cols,"state","season")
dummy_df <- main_df[, req_cols]
south_dists = c("Andhra Pradesh","Telangana", "Karnataka", "Kerala", "Tamil Nadu")
Dsouth <- ifelse(dummy_df$state %in% south_dists, 1, 0)
dummy_df$Dsouth <- Dsouth
measles_form <- Measles ~ v5 + v20 + v23 + v26 + v30 + v37 + v38 +
index + gdp + beds + tap + Dsouth
rabi_df <- na.omit(dummy_df[dummy_df$season == "Rabi", ])
kharif_df <- na.omit(dummy_df[dummy_df$season == "Kharif", ])
measles_form <- Measles ~ v5 + v20 + v23 + v26 + v30 + v37 + v38 +
index + gdp + beds + tap + Dsouth
full_rabi_df <- na.omit(dummy_df[dummy_df$season == "Rabi", ])
full_kharif_df <- na.omit(dummy_df[dummy_df$season == "Kharif", ])
measles_model_rabi <- lm(measles_form, rabi_df, na.action = na.omit)
measles_model_kharif <- lm(measles_form, kharif_df, na.action = na.omit)
rm(full_rabi_df,full_kharif_df)
# ---- Part C ----
measles_form_restricted <- Measles ~ v5 + v20 + v23 + v26 + v30 + v37 + v38 +
index + gdp + beds + tap
restricted_measles_model_rabi <- lm(measles_form_restricted, rabi_df, na.action = na.omit)
restricted_measles_model_kharif <- lm(measles_form_restricted, kharif_df, na.action = na.omit)
restricted_measles_model_total <- lm(measles_form_restricted, dummy_df, na.action = na.omit)
#Printing the summaries of 2 models
summary(measles_model_kharif)
summary(restricted_measles_model_kharif)
#Performing an F-test
anova(measles_model_kharif,restricted_measles_model_kharif)
var.test(measles_model_kharif,restricted_measles_model_kharif)
#Performing an F-test
anova(restricted_measles_model_kharif,measles_model_kharif)
var.test(restricted_measles_model_kharif,measles_model_kharif)
#Repeating for rabi
#Printing the summaries of 2 models
summary(measles_model_rabi)
summary(restricted_measles_model_rabi)
#Performing an F-test
anova(restricted_measles_model_kharif,measles_model_rabi)
var.test(restricted_measles_model_kharif,measles_model_rabi)
#Performing an F-test
anova(restricted_measles_model_rabi,measles_model_rabi)
#Performing an F-test
anova(restricted_measles_model_rabi,measles_model_rabi)
var.test(restricted_measles_model_rabi,measles_model_rabi)
#Performing an F-test
anova(restricted_measles_model_kharif,measles_model_kharif)
