x_vals <- c(95, 85, 80, 70, 60);
y_vals <- c(85, 95, 70, 65, 70);
df <- data.frame(x_vals, y_vals)
summary(lm(y~x, df))
summary(lm(y_vals ~ x_vals, df))
predict.lm(model, 80)
model <- lm(y_vals ~ x_vals, df)
predict.lm(model, 80)
predict.lm(model, c(80))
predict.lm(model, data.frame(c(80))
predict.lm(model, data.frame(c(80))
)
predict.lm(model, data.frame(c(80)))
load("C:/Users/krish/Desktop/Econometrics_Project/RScripts/krish_workspace.RData")
abs_corrs <- abs(corrs)
# packages' installation
# install.packages("readr");
# install.packages("dplyr");
# install.packages("tibble");
# install.packages("modeest");
# install.packages("statip");
# install.packages("ggplot2")
# install.packages("tidyr");
# install.packages("knitr");
# install.packages("modelsummary");
# install.packages("kableExtra");
# install.packages("gt");
# install.packages("tidyverse")
# install.packages("cowplot")
# install.packages("xtable")
#clear console and variables
rm(list = ls());
cat("\014");
library(dplyr);
library(readr);
library(modeest);
library(statip);
library(ggplot2);
library(tidyr);
library(modelsummary);
library(kableExtra);
library(tidyverse);
library(cowplot);
library(xtable);
#this is for modelsummary
webshot::install_phantomjs()
#reading the dataframe values into "main_df"
main_df <- read_csv("../Data/main_final.csv");
#renaming variable of interest: v36 to Measles in the main_df
names(main_df)[names(main_df) == "v36"] <- "Measles"
#getting numeric data only, from main_df
num_df <- main_df[, unlist(lapply(main_df, is.numeric))]
# ********************GETTING MODEL PARAMETERS********************
#determining which all features to be used among the numerical information
cov_mat_num <- cov(num_df, use = "complete.obs")
print(xtable(as.data.frame(cov_mat_num)), type = "html")
#Our variable of interest is infant deaths due to measles (percentage of total
#deaths)
# It should not scale with rowID (since it's just row_id), nor with country,
# could scale with state (as a categorical variable), could scale with
# districtLGDCode (similar to state), could with year, Area under production,
# yield, state (as a categorical variable) etc...
# seems like the viable variables are: area under production (areahectares),
# yieldtonneshectare, v1 (pregnant women registered for ante natal care),
# pregnant women registered for anti natal care within first trimester (v2),
# received 3 ANC checks: v3, v4 (tetanus toxoid), 100 iron and folic acid (v5),
#  moderately anaemic (v6), anaemia (v7), home deliveries (v8) ? , v9 ? , v10 ?,
# Note; v9 v10 v11 are categories of v8, which is also a category of v14 with v13
# v12 (pct discharged within 48 hours of delivery), v18(postpartum 48hr) ~ to v8
# safe deliveries v16, % home deliveries (probably not useful),
# measles deaths in infants should be related to healthcare facilities.
# therefore, it must have some correlation with v1 to v20 (birth and pregnancy
# variables), birth weight issues (v20 to v30), sex ratio as well at birth (v31)
# and also, with fully immunised children (as it relates to healthcare facility
# and attitude of people to it). It could also scale with sterlisation, which
# is done in order to prevent unwanted pregnancy, which may relate to the
# people's potential to handle the children.
# Measles is a viral respiratory disease. It spreads via air, saliva, touching
# a contaminated surface (hygiene), skin to skin contact (hygiene again),
# mother to child via pregnancy, labour or nursing.
# Polio is transmitted through contaminated water and food, and necessitates
# hygiene, similar to Measles.
# Therefore, Measles could be related to Polio deaths.
# Same with diarrhoea and malaria
covs <- as.data.frame(cov(num_df, use = "complete.obs"))
print(covs$Measles)
corrs <- as.data.frame(cor(num_df, use = "complete.obs"))
write_csv(corrs, "correlation_matrix.csv")
setwd("C:/Users/krish/Desktop/Econometrics_Project/RScripts")
#this is for modelsummary
webshot::install_phantomjs()
#reading the dataframe values into "main_df"
main_df <- read_csv("../Data/main_final.csv");
#renaming variable of interest: v36 to Measles in the main_df
names(main_df)[names(main_df) == "v36"] <- "Measles"
#getting numeric data only, from main_df
num_df <- main_df[, unlist(lapply(main_df, is.numeric))]
#determining which all features to be used among the numerical information
cov_mat_num <- cov(num_df, use = "complete.obs")
print(xtable(as.data.frame(cov_mat_num)), type = "html")
# Polio is transmitted through contaminated water and food, and necessitates
# hygiene, similar to Measles.
# Therefore, Measles could be related to Polio deaths.
# Same with diarrhoea and malaria
covs <- as.data.frame(cov(num_df, use = "complete.obs"))
print(covs$Measles)
corrs <- as.data.frame(cor(num_df, use = "complete.obs"))
write_csv(corrs, "correlation_matrix.csv")
abs_corrs <- abs(corrs)
View(abs_corrs)
View(abs_corrs)
# install.packages("statip");
# install.packages("ggplot2")
# install.packages("tidyr");
# install.packages("knitr");
# install.packages("modelsummary");
# install.packages("kableExtra");
# install.packages("gt");
# install.packages("tidyverse")
# install.packages("cowplot")
# install.packages("xtable")
install.packages("corrplot")
library(corrplot)
#*** correlation plot ***
corrplot(cov(num_df, use = "complete.obs"), method = "circle")
#*** correlation plot ***
corrplot(cov(num_df, use = "complete.obs"), method = "circle")
# *** correlation plot ***
corrplot(cov(num_df, use = "complete.obs"), method = "circle")
# *** correlation plot ***
corrplot(cov(num_df, use = "complete.obs"), is.corr = FALSE, method = "circle")
View(num_df)
View(num_df)
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("areahectares", "productiontonnes", "yieldtonneshectare", "v1", "v4",
"v5", "v6", "v15", "v16", "v17", "v20", "v21", "v23", "v27", "v29",
"v34", "v35", "v37", "v38", "v39", "index", "gdp", "beds", "tap"
)
test_df <- main_df[valid_cols]
corrplot(cov(test_df, use = "complete.obs"), method = "circle")
corrplot(cor(test_df, use = "complete.obs"), method = "circle")
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("areahectares", "productiontonnes", "yieldtonneshectare", "v1", "v4",
"v5", "v6", "v15", "v16", "v17", "v20", "v21", "v23", "v27", "v29",
"v34", "v35", "v37", "v38", "v39", "index", "gdp", "beds", "tap",
"Measles"
)
test_df <- main_df[valid_cols]
corrplot(cor(test_df, use = "complete.obs"), method = "circle")
correlation_plot <- corrplot(cor(test_df, use = "complete.obs"), method = "circle")
correlation_plot <- corrplot(cor(test_df, use = "complete.obs"),
method = "circle")
save_plot("correlation_plot.png", correlation_plot)
correlation_plot <- corrplot(cor(test_df, use = "complete.obs"),
method = "number")
save_plot("correlation_plot.png", correlation_plot)
correlation_plot <- corrplot(cor(test_df, use = "complete.obs"),
method = "shade")
# ********************MODELING PARAMETERS********************
measles_model <- Measles ~ v1 + v4 + v5 + v6 + v15 + v16 + v17 + v20 + v21 +
v23 + v27 + v29 + v34 + v35 + v37 + v38 + v39 +
index + gdp + beds + tap
# ********************MODELING PARAMETERS********************
measles_form <- Measles ~ v1 + v4 + v5 + v6 + v15 + v16 + v17 + v20 + v21 +
v23 + v27 + v29 + v34 + v35 + v37 + v38 + v39 +
index + gdp + beds + tap
measles_model <- lm(measles_form, test_df, na.action = na.omit)
modelsummary(measles_model)
summary(measles_model)
