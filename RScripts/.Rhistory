model <- lm(data$v42 ~ data$gdp + data$beds + data$tap)
summ(model,digits = 10)
# part b
regressB <- function(croptype){
data_temp <- subset(data,cropcategory == croptype)
model <- lm(data_temp$v42 ~ data_temp$gdp + data_temp$beds + data_temp$tap + data_temp$index)
print(summ(model),digits = 10)
}
for (val in unique(data$cropcategory)){
regressB(val)
}
# part b
regressB <- function(croptype){
data_temp <- subset(data,cropcategory == croptype)
model <- lm(data_temp$v42 ~ data_temp$gdp + data_temp$beds + data_temp$tap + data_temp$index)
print(summ(model,digits = 10))
}
for (val in unique(data$cropcategory)){
regressB(val)
}
for (val in unique(data$cropcategory)){
print(paste(val,"Regression"))
regressB(val)
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressB(val)
}
# part c
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[,cash := .(index[which(cropcategory=='Cash')]) ,by=.(districtlgdcode,season,year)]
req[,cereal := .(index[which(cropcategory=='Cereal')]) ,by=.(districtlgdcode,season,year)]
req[,horticulture := .(index[which(cropcategory=='Horticulture')]) ,by=.(districtlgdcode,season,year)]
req[,pulse := .(index[which(cropcategory=='Pulse')]) ,by=.(districtlgdcode,season,year)]
req[,oil := .(index[which(cropcategory=='Oilseed')]) ,by=.(districtlgdcode,season,year)]
req[,coarse := .(index[which(cropcategory=='Coarse Cereal')]) ,by=.(districtlgdcode,season,year)]
model <- lm(req$v42 ~ req$gdp + req$beds + req$tap + req$cash + req$cereal + req$horticulture
+ req$pulse + req$oil + req$coarse)
print("--------------")
print("LBW Regression")
print("--------------")
summ(model)
summ(model,digits = 10)
# part F
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
regressF <- function(croptype){
dtemp <- subset(req,cropcategory == croptype)
dtemp$index[!is.finite(log(dtemp$index))] <- NA
dtemp$gdp[!is.finite(log(dtemp$gdp))] <- NA
dtemp$tap[!is.finite(log(dtemp$tap))] <- NA
dtemp$beds[!is.finite(log(dtemp$beds))] <- NA
model <- lm(dtemp$v42 ~ log(dtemp$gdp) + log(dtemp$beds) + log(dtemp$tap) + log(dtemp$index))
print(summ(model,digits = 10))
}
for (val in unique(data$cropcategory)){
regressF(val)
}
# part F
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
regressF <- function(croptype){
dtemp <- subset(req,cropcategory == croptype)
dtemp$index[!is.finite(log(dtemp$index))] <- NA
dtemp$gdp[!is.finite(log(dtemp$gdp))] <- NA
dtemp$tap[!is.finite(log(dtemp$tap))] <- NA
dtemp$beds[!is.finite(log(dtemp$beds))] <- NA
model <- lm(dtemp$v42 ~ log(dtemp$gdp) + log(dtemp$beds) + log(dtemp$tap) + log(dtemp$index))
print(summ(model,digits = 10))
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressF(val)
}
# part G
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[,cash := .(index[which(cropcategory=='Cash')]) ,by=.(districtlgdcode,season,year)]
req[,cereal := .(index[which(cropcategory=='Cereal')]) ,by=.(districtlgdcode,season,year)]
req[,horticulture := .(index[which(cropcategory=='Horticulture')]) ,by=.(districtlgdcode,season,year)]
req[,pulse := .(index[which(cropcategory=='Pulse')]) ,by=.(districtlgdcode,season,year)]
req[,oil := .(index[which(cropcategory=='Oilseed')]) ,by=.(districtlgdcode,season,year)]
req[,coarse := .(index[which(cropcategory=='Coarse Cereal')]) ,by=.(districtlgdcode,season,year)]
req$cash[!is.finite(log(req$cash))] <- NA
req$cereal[!is.finite(log(req$cereal))] <- NA
req$horticulture[!is.finite(log(req$horticulture))] <- NA
req$pulse[!is.finite(log(req$pulse))] <- NA
req$oil[!is.finite(log(req$oil))] <- NA
req$coarse[!is.finite(log(req$coarse))] <- NA
req$gdp[!is.finite(log(req$gdp))] <- NA
req$beds[!is.finite(log(req$beds))] <- NA
req$tap[!is.finite(log(req$tap))] <- NA
model <- lm(req$v42 ~ log(req$gdp) + log(req$beds) + log(req$tap) + log(req$cash) + log(req$cereal) + log(req$horticulture)
+ log(req$pulse) + log(req$oil) + log(req$coarse))
print(summ(model,digits = 10))
model <- lm(data$v42 ~ data$gdp + data$beds + data$tap)
summ(model,digits = 10)
# part b
regressB <- function(croptype){
data_temp <- subset(data,cropcategory == croptype)
model <- lm(data_temp$v42 ~ data_temp$gdp + data_temp$beds + data_temp$tap + data_temp$index)
print(summ(model,digits = 10))
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressB(val)
}
# part c
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[,cash := .(index[which(cropcategory=='Cash')]) ,by=.(districtlgdcode,season,year)]
req[,cereal := .(index[which(cropcategory=='Cereal')]) ,by=.(districtlgdcode,season,year)]
req[,horticulture := .(index[which(cropcategory=='Horticulture')]) ,by=.(districtlgdcode,season,year)]
req[,pulse := .(index[which(cropcategory=='Pulse')]) ,by=.(districtlgdcode,season,year)]
req[,oil := .(index[which(cropcategory=='Oilseed')]) ,by=.(districtlgdcode,season,year)]
req[,coarse := .(index[which(cropcategory=='Coarse Cereal')]) ,by=.(districtlgdcode,season,year)]
model <- lm(req$v42 ~ req$gdp + req$beds + req$tap + req$cash + req$cereal + req$horticulture
+ req$pulse + req$oil + req$coarse)
print("--------------")
print("LBW Regression")
print("--------------")
summ(model,digits = 10)
# part d
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
# calculating growth rate
req[, index_lag := shift(index) ,by=.(cropcategory,districtlgdcode,season)]
req[, index_growth := (index - index_lag)/index_lag,by=.(cropcategory,districtlgdcode,season)]
req$index_growth[!is.finite(req$index_growth)] <- NA
setDF(req)
regressD <- function(croptype){
data_temp <- subset(req,cropcategory == croptype)
model <- lm(data_temp$v42 ~ data_temp$gdp + data_temp$beds + data_temp$tap + data_temp$index_growth)
print(summ(model, digits = 10))
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressD(val)
}
# part E
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
# calculating growth rate
req[, index_lag := shift(index) ,by=.(cropcategory,districtlgdcode,season)]
req[, index_growth := (index - index_lag)/index_lag,by=.(cropcategory,districtlgdcode,season)]
req$index_growth[!is.finite(req$index_growth)] <- NA
req[,cash := .(index_growth[which(cropcategory=='Cash')]) ,by=.(districtlgdcode,season,year)]
req[,cereal := .(index_growth[which(cropcategory=='Cereal')]) ,by=.(districtlgdcode,season,year)]
req[,horticulture := .(index_growth[which(cropcategory=='Horticulture')]) ,by=.(districtlgdcode,season,year)]
req[,pulse := .(index_growth[which(cropcategory=='Pulse')]) ,by=.(districtlgdcode,season,year)]
req[,oil := .(index_growth[which(cropcategory=='Oilseed')]) ,by=.(districtlgdcode,season,year)]
req[,coarse := .(index_growth[which(cropcategory=='Coarse Cereal')]) ,by=.(districtlgdcode,season,year)]
model <- lm(req$v42 ~ req$gdp + req$beds + req$tap + req$cash + req$cereal + req$horticulture
+ req$pulse + req$oil + req$coarse)
print(summ(model))
print(summ(model,digits = 10))
# part F
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
regressF <- function(croptype){
dtemp <- subset(req,cropcategory == croptype)
dtemp$index[!is.finite(log(dtemp$index))] <- NA
dtemp$gdp[!is.finite(log(dtemp$gdp))] <- NA
dtemp$tap[!is.finite(log(dtemp$tap))] <- NA
dtemp$beds[!is.finite(log(dtemp$beds))] <- NA
model <- lm(dtemp$v42 ~ log(dtemp$gdp) + log(dtemp$beds) + log(dtemp$tap) + log(dtemp$index))
print(summ(model,digits = 10))
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressF(val)
}
# part G
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[,cash := .(index[which(cropcategory=='Cash')]) ,by=.(districtlgdcode,season,year)]
req[,cereal := .(index[which(cropcategory=='Cereal')]) ,by=.(districtlgdcode,season,year)]
req[,horticulture := .(index[which(cropcategory=='Horticulture')]) ,by=.(districtlgdcode,season,year)]
req[,pulse := .(index[which(cropcategory=='Pulse')]) ,by=.(districtlgdcode,season,year)]
req[,oil := .(index[which(cropcategory=='Oilseed')]) ,by=.(districtlgdcode,season,year)]
req[,coarse := .(index[which(cropcategory=='Coarse Cereal')]) ,by=.(districtlgdcode,season,year)]
req$cash[!is.finite(log(req$cash))] <- NA
req$cereal[!is.finite(log(req$cereal))] <- NA
req$horticulture[!is.finite(log(req$horticulture))] <- NA
req$pulse[!is.finite(log(req$pulse))] <- NA
req$oil[!is.finite(log(req$oil))] <- NA
req$coarse[!is.finite(log(req$coarse))] <- NA
req$gdp[!is.finite(log(req$gdp))] <- NA
req$beds[!is.finite(log(req$beds))] <- NA
req$tap[!is.finite(log(req$tap))] <- NA
model <- lm(req$v42 ~ log(req$gdp) + log(req$beds) + log(req$tap) + log(req$cash) + log(req$cereal) + log(req$horticulture)
+ log(req$pulse) + log(req$oil) + log(req$coarse))
print(summ(model,digits = 10))
print("Hello world")
library(data.table)
library(jtools)
model <- lm(data$v42 ~ data$gdp + data$beds + data$tap)
summ(model,digits = 10)
predict(model,data)
predict(model,data,interval = 'prediction')
vec <- predict(model,data,interval = 'prediction')$fit
vec <- vec$fit
vec <- predict(model,data,interval = 'prediction')
vec <- vec$fit
vec[0]
View(vec)
print(vec[0])
print(vec[1])
print(vec$fit)
vec <- predict(model,data,interval = 'prediction')['fit']
print(vec)
vec <- predict(model,data,interval = 'prediction')
print(vec["fit"])
is.atomic(vec)
vec["fit"]
print(vec[["fit"]])
vec[1]
vec[2]
vec[3]
vec[4]
vec[5]
nrow(vec)
vec[1:nrow(vec)]
cor(data$v42,vec[1:nrow(vec)],use = 'complete.obs')
corCoeff<- function(model, dataf){
vec <- predict(model,dataf,interval = 'prediction')
cor(dataf$v42,vec[1:nrow(vec)],use = 'complete.obs')
}
corCoeff(model, data)
corCoeff(model, data)**2
corCoeff(model, data)^2
print(corCoeff(model, data))
getR(model)
getR <- function(model){
summary(model)$r.squared
}
getR(model)
getR <- function(model){
sqrt(summary(model)$r.squared)
}
getR(model)
print(corCoeff(model, data))
View(data)
View(req)
model <- lm(data$v42 ~ data$gdp + data$beds + data$tap)
summ(model,digits = 10)
print(corCoeff(model, data))
getR(model)
# part d
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
# calculating growth rate
req[, index_lag := shift(index) ,by=.(cropcategory,districtlgdcode,season)]
req[, index_growth := (index - index_lag)/index_lag,by=.(cropcategory,districtlgdcode,season)]
req$index_growth[!is.finite(req$index_growth)] <- NA
setDF(req)
regressD <- function(croptype){
data_temp <- subset(req,cropcategory == croptype)
model <- lm(data_temp$v42 ~ data_temp$gdp + data_temp$beds + data_temp$tap + data_temp$index_growth)
#print(summ(model, digits = 10))
print(corCoeff(model,data_temp))
}
for (val in unique(data$cropcategory)){
print("--------------")
print(paste(val,"Regression"))
print("--------------")
regressD(val)
}
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[, index_lag := shift(index) ,by=.(cropcategory,districtlgdcode,season)]
req[, index_growth := (index - index_lag)/index_lag,by=.(cropcategory,districtlgdcode,season)]
req$index_growth[!is.finite(req$index_growth)] <- NA
setDF(req)
for (i in cropTypes){
temp <- subset(req, cropcategory == i)
for (j in c(2:2)){
print(paste("Correlation b/w",labels[j],"and yield_index_growth for",i,"crops"))
print(cor(temp[,maps[j]],temp$index_growth,use = "complete.obs"))
}
}
cropTypes = unique(data$cropcategory)
for (i in cropTypes){
temp <- subset(data, cropcategory == i)
for (j in c(1:6)){
print(paste("Correlation b/w",labels[j],"and yield_index for",i,"crops"))
print(cor(temp[,maps[j]],temp$index,use = "complete.obs"))
}
}
mean(req$index_growth)
mean(req$index_growth)
mean(req$index_growth, na.rm = T)
req <- subset(data,select = c("v40","v42","v43","v44","v45","v46","gdp","beds","tap","index","districtlgdcode","year","cropcategory","season"))
setDT(req)
req[, index_lag := shift(index) ,by=.(cropcategory,districtlgdcode,season)]
req[, index_growth := (index - index_lag)/index_lag,by=.(cropcategory,districtlgdcode,season)]
req$index_growth[!is.finite(req$index_growth)] <- NA
setDF(req)
for (i in cropTypes){
temp <- subset(req, cropcategory == i)
for (j in c(2:2)){
print(paste("Correlation b/w",labels[j],"and yield_index_growth for",i,"crops"))
print(cor(temp[,maps[j]],temp$index_growth,use = "complete.obs"))
}
}
# install.packages("modelsummary");
# install.packages("kableExtra");
# install.packages("gt");
# install.packages("tidyverse")
# install.packages("cowplot")
# install.packages("xtable")
# install.packages("corrplot")
# install.packages("lessR")
# install.packages("data.table")
#clear console and variables
rm(list = ls());
cat("\014");
library(dplyr);
library(readr);
library(modeest);
library(statip);
library(ggplot2);
library(tidyr);
library(modelsummary);
library(kableExtra);
library(tidyverse);
library(cowplot);
library(xtable);
library(corrplot);
library(lessR);
library(data.table);
#this is for modelsummary
webshot::install_phantomjs()
#reading the dataframe values into "main_df"
main_df <- read_csv("Data/main_final.csv");
#reading the dataframe values into "main_df"
main_df <- read_csv("Data/main_final.csv");
#reading the dataframe values into "main_df"
main_df <- read_csv("Data/main_final.csv");
pqd
pwd
~/
getwd()
setwd("C:/coding/Econo/Econometrics_Project/")
getwd()
#reading the dataframe values into "main_df"
main_df <- read_csv("Data/main_final.csv");
#renaming variable of interest: v36 to Measles in the main_df
names(main_df)[names(main_df) == "v36"] <- "Measles"
#getting numeric data only, from main_df
num_df <- main_df[, unlist(lapply(main_df, is.numeric))]
#determining which all features to be used among the numerical information
cov_mat_num <- cov(num_df, use = "complete.obs")
print(xtable(as.data.frame(cov_mat_num)), type = "html")
# Polio is transmitted through contaminated water and food, and necessitates
# hygiene, similar to Measles.
# Therefore, Measles could be related to Polio deaths.
# Same with diarrhoea and malaria
covs <- as.data.frame(cov(num_df, use = "complete.obs"))
print(covs$Measles)
abs_corrs <- abs(corrs)
# Polio is transmitted through contaminated water and food, and necessitates
# hygiene, similar to Measles.
# Therefore, Measles could be related to Polio deaths.
# Same with diarrhoea and malaria
covs <- as.data.frame(cov(num_df, use = "complete.obs"))
print(covs$Measles)
corrs <- as.data.frame(cor(num_df, use = "complete.obs"))
abs_corrs <- abs(corrs)
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("areahectares", "productiontonnes", "yieldtonneshectare", "v1",
"v4", "v5", "v6", "v15", "v16", "v17", "v20", "v21", "v23",
"v27", "v28", "v29", "v30", "v34", "v35", "v37", "v38", "v39",
"index", "gdp", "beds", "tap", "Measles", "season"
)
test_df <- main_df[valid_cols]
correlation_plot <- corrplot(cor(test_df[, 1: 27], use = "complete.obs"),
method = "shade")
corrplot(cor(num_df, use = "complete.obs"), method = "shade")
#original formula
measles_form1 <- Measles ~ v1 + v4 + v5 + v6 + v15 + v16 + v17 + v20 + v21 +
v23 + v27 + v29 + v34 + v35 + v37 + v38 + v39 +
index + gdp + beds + tap
measles_form <- Measles ~ atan(1/v1) + v4 + v5 + v6 + v15 + v16 +
v17 + v20 + v21 +  v23 + v28 + v30 + v34 + v35 +
v37 + v38 + v39 + index + gdp + beds + tap
measles_model_rabi <- lm(measles_form, test_df[test_df$season == "Rabi", ],
na.action = na.omit)
measles_model_kharif <- lm(measles_form, test_df[test_df$season == "Kharif", ],
na.action = na.omit)
summary(measles_model_rabi)
summary(measles_model_kharif)
# ***** Alternate formula *****
alt <- Measles ~ v13 + v29 + v34 + v27 + beds + index + gdp + tap
summary(lm(alt, main_df, na.action = na.omit))
# ********************IMPROVING MODEL PARAMETERS********************
for (param in names(num_df[, 9:length(names(num_df))])){
if (param != "Measles"){
scatter.smooth(num_df$Measles, num_df[[param]], xlab = "Measles", ylab = param)
cat("Press [enter] to continue")
line <- readline()
dev.off()
if(line == "stop") break
}
}
measles_model_rabi <- lm(measles_form1, test_df[test_df$season == "Rabi", ],
na.action = na.omit)
measles_model_kharif <- lm(measles_form1, test_df[test_df$season == "Kharif", ],
na.action = na.omit)
summary(measles_model_rabi)
summary(measles_model_kharif)
measles_form2 <- log(Measles) ~ v1 + v4 + v5 + v6 + v15 + v16 + v17 + v20 + v21 +
v23 + v27 + v29 + v34 + v35 + v37 + v38 + v39 +
index + gdp + beds + tap
measles_model_rabi <- lm(measles_form2, test_df[test_df$season == "Rabi", ],
na.action = na.omit)
summary(measles_model_rabi)
# install.packages("modelsummary");
# install.packages("kableExtra");
# install.packages("gt");
# install.packages("tidyverse")
# install.packages("cowplot")
# install.packages("xtable")
# install.packages("corrplot")
# install.packages("lessR")
# install.packages("data.table")
#clear console and variables
rm(list = ls());
cat("\014");
library(dplyr);
library(readr);
library(modeest);
library(statip);
library(ggplot2);
library(tidyr);
library(modelsummary);
library(kableExtra);
library(tidyverse);
library(cowplot);
library(xtable);
library(corrplot);
library(lessR);
library(data.table);
#this is for modelsummary
webshot::install_phantomjs()
#reading the dataframe values into "main_df"
main_df <- read_csv("../Data/main_final.csv");
getwd()
setwd("C:/coding/Econo/Econometrics_Project/RScripts")
getwd()
#reading the dataframe values into "main_df"
main_df <- read_csv("../Data/main_final.csv");
#renaming variable of interest: v36 to Measles in the main_df
names(main_df)[names(main_df) == "v36"] <- "Measles"
#getting numeric data only, from main_df
num_df <- main_df[, unlist(lapply(main_df, is.numeric))]
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("areahectares", "productiontonnes", "yieldtonneshectare", "v1",
"v4", "v5", "v6", "v12", "v15", "v16", "v17", "v20", "v21", "v23",
"v27", "v28", "v29", "v30", "v34", "v35", "v37", "v38", "v39",
"index", "gdp", "beds", "tap", "Measles", "season"
)
test_df <- main_df[valid_cols]
measles_form <- Measles ~ v1 + v4 + v5 + v6 + v12 + v15 + v16 +
v17 + v20 + v21 +  v23 + v28 + v30 + v34 + v35 + v37 +
v38 + v39 + index + gdp + beds + tap
measles_model_rabi <- lm(measles_form, test_df[test_df$season == "Rabi", ],
na.action = na.omit)
measles_model_kharif <- lm(measles_form, test_df[test_df$season == "Kharif", ],
na.action = na.omit)
summary(measles_model_rabi)
measles_form <- Measles ~ v4 + v5 + v20 + v23 + v26 + v30 + v34 +
v37 + v38 + index + gdp + beds + tap
measles_model_rabi <- lm(measles_form, rabi_df,
na.action = na.omit)
# *** correlation plot ***
#dropping params (either redundant or other)
valid_cols <- c("areahectares", "productiontonnes", "yieldtonneshectare", "v1",
"v4", "v5", "v6", "v8", "v15", "v16", "v17", "v20", "v21", "v23",
"v26",
"v27", "v28", "v29", "v30", "v34", "v35", "v37", "v38", "v39",
"index", "gdp", "beds", "tap", "Measles", "season"
)
test_df <- main_df[valid_cols]
rabi_df <- test_df[test_df$season == "Rabi", ]
kharif_df <- test_df[test_df$season == "Kharif", ]
measles_form <- Measles ~ v4 + v5 + v20 + v23 + v26 + v30 + v34 +
v37 + v38 + index + gdp + beds + tap
measles_model_rabi <- lm(measles_form, rabi_df,
na.action = na.omit)
measles_model_kharif <- lm(measles_form, kharif_df,
na.action = na.omit)
summary(measles_model_rabi)
measles_form <- Measles ~ v4 + v5 + v20 + v23 + v26 + v30 + v34 +
v37 + v38 + beds + tap
measles_model_rabi <- lm(measles_form, rabi_df,
na.action = na.omit)
measles_model_kharif <- lm(measles_form, kharif_df,
na.action = na.omit)
summary(measles_model_rabi)
summary(measles_model_kharif)
?rnorm
